{
   "swagger":"2.0",
   "info":{
      "version":"1.0.0",
      "title":"Customer APIs",
      "description":"All APIs related to the customer controller",
      "termsOfService":"#"
   },
   "basePath":"/",
   "tags":[
      {
         "name":"Store Customer",
         "description":"API for store customer"
      }
   ],
   "schemes":[
      "https",
      "http"
   ],
   "consumes":[
      "application/json"
   ],
   "produces":[
      "application/json"
   ],
   "paths":{
      "/customer/register":{
         "post":{
            "tags":[
               "Store Customer"
            ],
            "description":"Register new customer for store",
            "operationId":"register",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"first_name",
                  "in":"formData",
                  "description":"Customer first name.",
                  "required":true,
                  "type": "string"
               },
               {
                  "name":"last_name",
                  "in":"formData",
                  "description":"Customer last name.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"email",
                  "in":"formData",
                  "description":"Customer uniqe email address.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"confirm_email",
                  "in":"formData",
                  "description":"Confirm email for customer.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"password",
                  "in":"formData",
                  "description":"Passowrd to access account.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"confirm_password",
                  "in":"formData",
                  "description":"Confirm password to match with password.",
                  "required":true,
                  "type":"string"
               }                
            ],
            "responses":{
               "200":{
                  "description":"Thank you for registering with us!",
                  "schema":{
                      "$ref":"#/definitions/200register"
                  }
               },
               "400":{
                  "description":"Validation errors",
                  "schema":{
                     "$ref":"#/definitions/400register"
                  }
               },
               "409":{
                  "description":"The email has already been taken",
                  "schema":{
                     "$ref":"#/definitions/409register"
                  }
               },               
               "500":{
                  "description":"Due to some error, customer is not registered yet. Please try again!",
                  "schema":{
                     "$ref":"#/definitions/500register"
                  }
               }               
            }
         }
      },
      "/customer/login":{
         "post":{
            "tags":[
               "Store Customer"
            ],
            "description":"Login API to access customer account.",
            "operationId":"login",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"email",
                  "in":"formData",
                  "description":"Email address of customer",
                  "required":true,
                  "type":"string"
               },               
               {
                  "name":"password",
                  "in":"formData",
                  "description":"Passowrd for customer account",
                  "required":true,
                  "type":"string"
               }                                                                 
            ],
            "responses":{
               "200":{
                  "description":"Logged in successfully!",
                  "schema":{
                     "$ref":"#/definitions/200login"
                  }
               },
               "404":{
                  "description":"Email & Password not correct. Please try again.",
                  "schema":{
                     "$ref":"#/definitions/404login"
                  }
               },
               "500":{
                  "description":"Due to some error, unable to login. Please try again!",
                  "schema":{
                     "$ref":"#/definitions/500login"
                  }
               }                                    
            }
         }
      },
	
      "/customer/forgetPassword":{
         "post":{
            "tags":[
               "Store Customer"
            ],
            "description":"Forget password API for customer.",
            "operationId":"forgetPassword",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"email",
                  "in":"formData",
                  "description":"Email address of customer",
                  "required":true,
                  "type":"string"
               }                                                                 
            ],
            "responses":{
               "200":{
                  "description":"Reset password link sent to your email.Please check and reset your password!",
                  "schema":{
                     "$ref":"#/definitions/200forget"
                  }
               },
               "404":{
                  "description":"Email is not registered with us. Please enter correct email id!",
                  "schema":{
                     "$ref":"#/definitions/404forget"
                  }
               },
               "500":{
                  "description":"Unable to process request!",
                  "schema":{
                     "$ref":"#/definitions/500forget"
                  }
               }                                    
            }
         }
      },
      "/customer/updateProfile":{
         "post":{
            "tags":[
               "Store Customer"
            ],
            "description":"Update Profile API for customer.",
            "operationId":"updateProfile",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"first_name",
                  "in":"formData",
                  "description":"First name of customer",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"last_name",
                  "in":"formData",
                  "description":"Last name of customer",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"user_id",
                  "in":"formData",
                  "description":"User id of customer",
                  "required":true,
                  "type":"integer"
               }                                                                
            ],
            "responses":{
               "200":{
                  "description":"Your have successfully updated your profile.",
                  "schema":{
                     "$ref":"#/definitions/200updateprofile"
                  }
               },
               "404":{
                  "description":"Something went wrong. Please try again.",
                  "schema":{
                     "$ref":"#/definitions/404updateprofile"
                  }
               },
               "500":{
                  "description":"Unable to process request!",
                  "schema":{
                     "$ref":"#/definitions/500updateprofile"
                  }
               }                                    
            }
         }
      },
       "/customer/fetchAllAddresses":{
         "post":{
            "tags":[
               "Store Customers Addresses"
            ],
            "description":"Fetch all address of a specific customer.",
            "operationId":"fetchAllAddresses",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
               {
                  "name":"user_id",
                  "in":"formData",
                  "description":"User id of customer",
                  "required":true,
                  "type":"integer"
               },  
               {
                  "name":"token",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               }                                                                
            ],
            "responses":{
               "200":{
                  "description":"Your have successfully updated your profile.",
                  "schema":{
                     "$ref":"#/definitions/200fetchedalladdresses"
                  }
               },
               "404":{
                  "description":"Something went wrong. Please try again.",
                  "schema":{
                     "$ref":"#/definitions/404fetchedalladdresses"
                  }
               },
               "500":{
                  "description":"Unable to process request!",
                  "schema":{
                     "$ref":"#/definitions/500fetchedalladdresses"
                  }
               }                                    
            }
         }
      },
      "/customer/editAddress":{
         "post":{
            "tags":[
               "Store Customers Addresses"
            ],
            "description":"edit address of a specific customer.",
            "operationId":"editAddress",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
               {
                  "name":"user_id",
                  "in":"formData",
                  "description":"User id of customer",
                  "required":true,
                  "type":"integer"
               }, 
               {
                  "name":"address_id",
                  "in":"formData",
                  "description":"Address id of customer",
                  "required":true,
                  "type":"integer"
               },  
               {
                  "name":"token",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               }                                                                
            ],
            "responses":{
               "200":{
                  "description":"Your have successfully updated your profile.",
                  "schema":{
                     "$ref":"#/definitions/200editaddress"
                  }
               },
               "404":{
                  "description":"Something went wrong. Please try again.",
                  "schema":{
                     "$ref":"#/definitions/404editaddress"
                  }
               },
               "500":{
                  "description":"Unable to process request!",
                  "schema":{
                     "$ref":"#/definitions/500editaddress"
                  }
               }                                    
            }
         }
      },
      "/customer/updateAddress":{
         "post":{
            "tags":[
               "Store Customers Addresses"
            ],
            "description":"Update any specific customer address",
            "operationId":"updateAddress",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
               {
                  "name":"user_id",
                  "in":"formData",
                  "description":"User id of customer",
                  "required":true,
                  "type":"integer"
               },
               {
                  "name":"id",
                  "in":"formData",
                  "description":"Address id of customer",
                  "required":true,
                  "type":"integer"
               },
               {
                  "name":"location_type",
                  "in":"formData",
                  "description":"Location type of address",
                  "required":true,
                  "type":"string"
               }, 
               {
                  "name":"first_name",
                  "in":"formData",
                  "description":"First name of customer",
                  "required":true,
                  "type":"string"
               }, 
               {
                  "name":"last_name",
                  "in":"formData",
                  "description":"Last name of customer",
                  "required":true,
                  "type":"string"
               }, 
               {
                  "name":"address_line1",
                  "in":"formData",
                  "description":"address line1 of customer",
                  "required":true,
                  "type":"string"
               }, 
               {
                  "name":"address_line2",
                  "in":"formData",
                  "description":"address line2 of customer",
                  "required":true,
                  "type":"string"
               }, 
               {
                  "name":"city",
                  "in":"formData",
                  "description":"city of customer",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"province",
                  "in":"formData",
                  "description":"province of customer",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"country_id",
                  "in":"formData",
                  "description":"country id of customer",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"zip_code",
                  "in":"formData",
                  "description":"city of customer",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"phone",
                  "in":"formData",
                  "description":"phone of customer",
                  "required":true,
                  "type":"string"
               },    
               {
                  "name":"token",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               }                                                                
            ],
            "responses":{
               "200":{
                  "description":"Your have successfully updated your address.",
                  "schema":{
                     "$ref":"#/definitions/200updateAddress"
                  }
               },
               "404":{
                  "description":"Something went wrong. Please try again.",
                  "schema":{
                     "$ref":"#/definitions/404updateAddress"
                  }
               },
               "500":{
                  "description":"Unable to process request!",
                  "schema":{
                     "$ref":"#/definitions/500updateAddress"
                  }
               }                                    
            }
         }
      },
      "/customer/verifyCode":{
         "post":{
            "tags":[
               "Store Customer"
            ],
            "description":"Validate verification code for forget password sent by customer.",
            "operationId":"verifyCode",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"confirmation_code",
                  "in":"formData",
                  "description":"Confirmatin code sent in link of forget password API",
                  "required":true,
                  "type":"string"
               }                                                                 
            ],
            "responses":{
               "200":{
                  "description":"Confirmation code matched!",
                  "schema":{
                     "$ref":"#/definitions/200verifyCode"
                  }
               },
               "400":{
                  "description":"Confirmation link has expired!",
                  "schema":{
                     "$ref":"#/definitions/400verifyCode"
                  }
               },
               "500":{
                  "description":"Unable to process request!",
                  "schema":{
                     "$ref":"#/definitions/500verifyCode"
                  }
               }                                    
            }
         }
      },                      
      "/customer/resetPassword":{
         "put":{
            "tags":[
               "Store Customer"
            ],
            "description":"Use to reset password send by customer and send confirmation email.",
            "operationId":"resetPassword",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"confirmation_code",
                  "in":"formData",
                  "description":"Confirmatin code sent in link of forget password API",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"password",
                  "in":"formData",
                  "description":"New password",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"confirm_password",
                  "in":"formData",
                  "description":"Confirm password same as password.",
                  "required":true,
                  "type":"string"
               }                              
            ],
            "responses":{
               "200":{
                  "description":"Password is successfully reset!",
                  "schema":{
                     "$ref":"#/definitions/200resetPassword"
                  }
               },
               "400":{
                  "description":"Validation errors!",
                  "schema":{
                     "$ref":"#/definitions/400resetPassword"
                  }
               },
               "404":{
                  "description":"Confirmation link has expired!",
                  "schema":{
                     "$ref":"#/definitions/404resetPassword"
                  }
               },               
               "500":{
                  "description":"Unable to process request!",
                  "schema":{
                     "$ref":"#/definitions/500resetPassword"
                  }
               }                                    
            }
         }
      }      
   },
   "definitions":{
      "200register":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"Thank you for registering with us!"
            },
            "token":{
               "type":"string",
               "example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NjEsInJvbGUiOjMsImlhdCI6MTQ5OTA3NDQyNCwiZXhwIjoxNDk5MDc3NDI0fQ.yeJH0TLS2bQfQNqrDAKprsJ2paV-sMKISrur_TE74lY"
            },
            "result": {
               "type":"object",
               "example": {
                  "first_name": "Anil",
                  "last_name": "Tester",
                  "email": "vikram@mobikasa.com"
               }
            }
         }
      }, 
      "400register":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"400"
            },            
            "message":{
               "type":"string",
               "example":"Validation errors"
            }
         }
      },  
      "409register":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"409"
            },            
            "message":{
               "type":"string",
               "example":"The email has already been taken"
            }     
         }
      },  
      "500register":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Due to some error, customer is not registered yet. Please try again!"
            }    
         }
      },                      
      "200login":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"Logged in successfully!"
            },
            "token":{
               "type":"string",
               "example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NTksInJvbGUiOjMsImlhdCI6MTQ5OTA3NTg0MCwiZXhwIjoxNDk5MDc4ODQwfQ.DzwMaf55DQyhhKPo8jdxk63EjB9G-CNHuYntYmY250U"
            },
            "result": {
               "type":"object",
               "example": {
                  "first_name": "Anil",
                  "last_name": "Tester",
                  "email": "vikram@mobikasa.com"
               }
            } 
         }
      },
      "404login":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"404"
            },            
            "message":{
               "type":"string",
               "example":"Email & Password not correct. Please try again."
            }
         }
      },            
      "500login":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Due to some error, unable to login. Please try again!"
            }
         }
      },
      "200forget":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"Reset password link sent to your email.Please check and reset your password!"
            } 
         }
      },
       "200updateprofile":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"You have successfully updated your profile"
            } 
         }
      },
      "404forget":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"404"
            },            
            "message":{
               "type":"string",
               "example":"Email is not registered with us. Please enter correct email id!"
            }
         }
      },  
      "404updateprofile":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"404"
            },            
            "message":{
               "type":"string",
               "example":"We could not found any record for this user."
            }
         }
      },             
      "500forget":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Unable to process request!"
            }
         }
      },
     "500updateprofile":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Unable to process request!"
            }
         }
      },
      "200verifyCode":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"Confirmation code matched!"
            } 
         }
      },
      "400verifyCode":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"400"
            },            
            "message":{
               "type":"string",
               "example":"Confirmation link has expired!"
            }
         }
      },            
      "500verifyCode":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Unable to process request!"
            }
         }
      },
      "200resetPassword":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"Password is successfully reset!"
            } 
         }
      },
      "200fetchedalladdresses":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"You have successfully fetched all your Addresses."
            } 
         }
      },
      "200editaddress":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"You have successfully fetched your Address."
            } 
         }
      },
      "200updateAddress":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"You have successfully fetched updated your Address."
            } 
         }
      },
      "404fetchedalladdresses":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"404"
            },            
            "message":{
               "type":"string",
               "example":"Nothing found."
            }
         }
      }, 
      "404editaddress":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"404"
            },            
            "message":{
               "type":"string",
               "example":"Nothing found."
            }
         }
      }, 
      "404updateAddress":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"404"
            },            
            "message":{
               "type":"string",
               "example":"Nothing found."
            }
         }
      },                 
      "500fetchedalladdresses":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Unable to process request!"
            }
         }
      },
       "500editaddress":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Unable to process request!"
            }
         }
      },
      "500updateAddress":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Unable to process request!"
            }
         }
      },
      
      "400resetPassword":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"400"
            },            
            "message":{
               "type":"string",
               "example":"Validation errors!"
            },
            "errors":{
               "type":"object",
               "example":{
                  "confirm_password": "Please enter same password as above."
               }
            }
         }
      }, 
      "404resetPassword":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"404"
            },            
            "message":{
               "type":"string",
               "example":"Confirmation link has expired!"
            }
         }
      },                 
      "500resetPassword":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Unable to process request!"
            }
         }
      }        
   }
}
