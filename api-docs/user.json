{
   "swagger":"2.0",
   "info":{
      "version":"1.0.0",
      "title":"User APIs",
      "description":"All APIs related to the user controller",
      "termsOfService":"#"
   },
   "basePath":"/",
   "tags":[
      {
         "name":"User",
         "description":"API for login and user"
      }
   ],
   "schemes":[
      "http"
   ],
   "consumes":[
      "application/json"
   ],
   "produces":[
      "application/json"
   ],
   "paths":{
      "/api/admin/login":{
         "post":{
            "tags":[
               "User"
            ],
            "description":"what this API does",
            "operationId":"for the URL",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"email",
                  "in":"formData",
                  "description":"The email for user",
                  "required":true,
                  "type": "string"
               },
               {
                  "name":"password",
                  "in":"formData",
                  "description":"The Password for user",
                  "required":true,
                  "type":"string",
                  "format":"pasword"
               }               
            ],
            "responses":{
               "200":{
                  "description":"Logged in successfully!",
                  "schema":{
                      "$ref":"#/definitions/response"
                  }
               },
               "400":{
                  "description":"Page not found",
                  "schema":{
                     "$ref":"#/definitions/400error"
                  }
               }               
            }
         }
      },
      "/api/admin/create":{
         "post":{
            "tags":[
               "User"
            ],
            "description":"Create new admin user",
            "operationId":"create",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"token",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               },               
               {
                  "name":"name",
                  "in":"formData",
                  "description":"Name of User",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"email",
                  "in":"formData",
                  "description":"Email address of user",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"password",
                  "in":"formData",
                  "description":"User password",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"country_id",
                  "in":"formData",
                  "description":"Country id",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"province_id",
                  "in":"formData",
                  "description":"Country province id",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"address",
                  "in":"formData",
                  "description":"Address of User",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"phone_no",
                  "in":"formData",
                  "description":"Phone number of user",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"status",
                  "in":"formData",
                  "description":"User status active or Deactive",
                  "required":true,
                  "type":"integer"
               }                                                                  
            ],
            "responses":{
               "200":{
                  "description":"Create response",
                  "schema":{
                     "$ref":"#/definitions/createSuccess"
                  }
               }
            }
         }
      },
      "/api/admin/updateProfile":{
         "put":{
            "tags":[
               "User"
            ],
            "description":"Update admin user",
            "operationId":"updateProfile",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"formData",
                  "description":"Id of the desired user to update.",
                  "required":true,
                  "type":"integer"
               }, 
               {
                  "name":"token",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               },               
               {
                  "name":"name",
                  "in":"formData",
                  "description":"Name of User",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"email",
                  "in":"formData",
                  "description":"Email address of user",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"password",
                  "in":"formData",
                  "description":"User password",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"country_id",
                  "in":"formData",
                  "description":"Country id",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"province_id",
                  "in":"formData",
                  "description":"Country province id",
                  "required":false,
                  "type":"integer"
               },
               {
                  "name":"address",
                  "in":"formData",
                  "description":"Address of User",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"phone_number",
                  "in":"formData",
                  "description":"Phone number of user",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"status",
                  "in":"formData",
                  "description":"User status active(1) or Deactive(0)",
                  "required":true,
                  "type":"integer"
               }                                                                  
            ],
            "responses":{
               "200":{
                  "description":"Update response",
                  "schema":{
                     "$ref":"#/definitions/updateProfile"
                  }
               }
            }
         }
      },
      "/api/admin/deleteUser":{
         "delete":{
            "tags":[
               "User"
            ],
            "description":"Delete admin user",
            "operationId":"deleteUser",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"formData",
                  "description":"Id of the desired user to delete.",
                  "required":true,
                  "type":"integer"
               }, 
               {
                  "name":"token",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               }                                                                
            ],
            "responses":{
               "200":{
                  "description":"Update response",
                  "schema":{
                     "$ref":"#/definitions/deleteUser"
                  }
               }
            }
         }
      },
      "/api/admin/changePassword":{
         "post":{
            "tags":[
               "User"
            ],
            "description":"Admin change his own password",
            "operationId":"changePassword",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"token",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"old_password",
                  "in":"formData",
                  "description":"Id of the desired user to delete.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"new_password",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"new_password_confirmation",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               } 
                                                                               
            ],
            "responses":{
               "200":{
                  "description":"Update response",
                  "schema":{
                     "$ref":"#/definitions/changePassword"
                  }
               }
            }
         }
      },
      "/api/admin/getAllUsers":{
         "post":{
            "tags":[
               "User"
            ],
            "description":"Get all Users in admin",
            "operationId":"getAllUsers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"token",
                  "in":"formData",
                  "description":"Token get on login api response",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"email",
                  "in":"formData",
                  "description":"Email to search",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"name",
                  "in":"formData",
                  "description":"Name to search",
                  "required":false,
                  "type":"string"
               }                                                               
            ],
            "responses":{
               "200":{
                  "description":"Update response",
                  "schema":{
                     "$ref":"#/definitions/getAllUsers"
                  }
               }
            }
         }
      },
      "/api/admin/forget":{
         "post":{
            "tags":[
               "User"
            ],
            "description":"Forget password API for admin User",
            "operationId":"forget",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"email",
                  "in":"formData",
                  "description":"Email address of user",
                  "required":true,
                  "type":"string"
               }                                                            
            ],
            "responses":{
               "200":{
                  "description":"Forget password response",
                  "schema":{
                     "$ref":"#/definitions/forget200"
                  }
               },
               "404":{
                  "description":"Email does not exist.",
                  "schema":{
                     "$ref":"#/definitions/forget404"
                  }
               },               
               "500":{
                  "description":"Unable to process request!",
                  "schema":{
                     "$ref":"#/definitions/forget500"
                  }
               }        
            }
         }
      }      
   },
   "definitions":{
      "create":{
         "properties":{
            "eventId":{
               "required":true,
               "type":"string",
               "example":"mathmaticial"
            },
            "numberRequired":{
               "required":true,
               "type":"integer",
               "format":"int64",
               "example":500
            }
         }
      },
      "response1":{
         "properties":{
            "jobID":{
               "required":true,
               "type":"string",
               "example":"23423456543"
            },
            "request":{
               "required":true,
               "type":"schema",
               "example":{
                  "eventId":"mathmaticial",
                  "numberRequired":500
               }
            }
         }
      },
      "response":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"Logged in successfully!"
            },
            "token":{
               "type":"string",
               "example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwicm9sZSI6MSwiaWF0Ijox"
            }
         }
      },
      "createSuccess":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"User register successfully!"
            }
         }
      },
      "updateProfile":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"User updated successfully!"
            }
         }
      },
      "deleteUser":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"User deleted successfully!"
            }
         }
      },
      "getAllUsers":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"5 User found"
            },
            "result": [
            {
               "id": 9,
               "name": "Manish12",
               "email": "manish@mobikasa.com",
               "country_id": 0,
               "province_id": 0,
               "address": "New yourk city",
               "phone_number": 999999,
               "profile_image": "06-04-2016-09-35-16Crimson_Fantasy.jpg",
               "confirmed": 1,
               "status": 1,
               "type": 2
            },
            {
               "id": 9,
               "name": "Manish12",
               "email": "manish@mobikasa.com",
               "country_id": 0,
               "province_id": 0,
               "address": "New yourk city",
               "phone_number": 999999,
               "profile_image": "06-04-2016-09-35-16Crimson_Fantasy.jpg",
               "confirmed": 1,
               "status": 1,
               "type": 2
            }
           ]
            
         }
      },
      "changePassword":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"User deleted successfully!"
            }
         }
      },
      "forget200":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"true"
            },
            "code":{
               "type":"integer",
               "example":"200"
            },            
            "message":{
               "type":"string",
               "example":"Check your inbox for a password reset message!"
            }
         }
      },  
      "forget404":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"404"
            },            
            "message":{
               "type":"string",
               "example":"Email does not exist."
            }
         }
      },  
      "forget500":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"false"
            },
            "code":{
               "type":"integer",
               "example":"500"
            },            
            "message":{
               "type":"string",
               "example":"Unable to process request!"
            }
         }
      },                  
      "400error":{
         "properties":{
            "status":{
               "type":"boolean",
               "example":"False"
            },
            "code":{
               "type":"integer",
               "example":"400"
            },                        
            "message":{
               "type":"string",
               "example":"400 Bad Request"
            }
         }
      }
   }
}
